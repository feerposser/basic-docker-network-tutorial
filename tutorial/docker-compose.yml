version: '3.8'

services:
    example-service:
        image: test:0.1
        restart: unless-stopped
        container_name: test-network
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - 80:5000
        depends_on: 
            - mongo
        environment: 
            DATABASE_NAME: example
            DATABASE_HOST: mongo
            DATABASE_USER: admin
            DATABASE_PASSWORD: admin
        command: python app.py
    
    mongo:
        image: mongo
        restart: always
        container_name: mongodb
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: admin
        volumes: 
            - .mongodata:/data/db
    
    mongo-express:
        image: mongo-express
        restart: always
        container_name: mongo-express
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo  # mongo service container name
            ME_CONFIG_MONGODB_ADMINUSERNAME: admin      # db mongo username
            ME_CONFIG_MONGODB_ADMINPASSWORD: admin      # db mongo passw
            ME_CONFIG_BASICAUTH_USERNAME: admin         # mongo-express login user
            ME_CONFIG_BASICAUTH_PASSWORD: admin         # mongo-empress login passw
        depends_on: 
            - mongo

# runs on 'docker-compose up --build -d'




        # networks: 
        #     - test

# networks: 
#     test:
#         driver: bridge
#         name: test

# docker-compose up -d
# docker run -it --net=test ubuntu /bin/bash
# apt-get update && apt-get --assume-yes install curl
# curl http://app:5000